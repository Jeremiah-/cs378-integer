==27560== Memcheck, a memory error detector
==27560== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==27560== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==27560== Command: ./TestInteger
==27560== 
Running main() from gtest_main.cc
[==========] Running 6 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 6 tests from IntegerFixture
[ RUN      ] IntegerFixture.shift_left1
==27560== Invalid read of size 4
==27560==    at 0x40A734: testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x409E65: testing::AssertionResult testing::internal::EqHelper<false>::Compare<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x404C8B: IntegerFixture_shift_left1_Test::TestBody() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x42CB52: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F56C: testing::Test::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F603: testing::TestInfo::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F704: testing::TestCase::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F97C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41FC5D: testing::UnitTest::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x40495F: main (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==27560== 
==27560== 
==27560== Process terminating with default action of signal 11 (SIGSEGV)
==27560==  Access not within mapped region at address 0x0
==27560==    at 0x40A734: testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x409E65: testing::AssertionResult testing::internal::EqHelper<false>::Compare<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x404C8B: IntegerFixture_shift_left1_Test::TestBody() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x42CB52: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F56C: testing::Test::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F603: testing::TestInfo::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F704: testing::TestCase::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41F97C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x41FC5D: testing::UnitTest::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==    by 0x40495F: main (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==27560==  If you believe this happened as a result of a stack
==27560==  overflow in your program's main thread (unlikely but
==27560==  possible), you can try to increase the size of the
==27560==  main thread stack using the --main-stacksize= flag.
==27560==  The main thread stack size used in this run was 16777216.
==27560== 
==27560== HEAP SUMMARY:
==27560==     in use at exit: 2,959 bytes in 46 blocks
==27560==   total heap usage: 230 allocs, 184 frees, 39,750 bytes allocated
==27560== 
==27560== LEAK SUMMARY:
==27560==    definitely lost: 0 bytes in 0 blocks
==27560==    indirectly lost: 0 bytes in 0 blocks
==27560==      possibly lost: 751 bytes in 19 blocks
==27560==    still reachable: 2,208 bytes in 27 blocks
==27560==         suppressed: 0 bytes in 0 blocks
==27560== Rerun with --leak-check=full to see details of leaked memory
==27560== 
==27560== For counts of detected and suppressed errors, rerun with: -v
==27560== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
