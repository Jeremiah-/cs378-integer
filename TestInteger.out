==3947== Memcheck, a memory error detector
==3947== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==3947== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==3947== Command: ./TestInteger
==3947== 
Running main() from gtest_main.cc
[==========] Running 86 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 86 tests from IntegerFixture
[ RUN      ] IntegerFixture.shift_left1
[       OK ] IntegerFixture.shift_left1 (28 ms)
[ RUN      ] IntegerFixture.shift_left2
[       OK ] IntegerFixture.shift_left2 (4 ms)
[ RUN      ] IntegerFixture.shift_left3
[       OK ] IntegerFixture.shift_left3 (4 ms)
[ RUN      ] IntegerFixture.shift_right1
==3947== Invalid read of size 4
==3947==    at 0x42C2B7: testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x42A031: testing::AssertionResult testing::internal::EqHelper<false>::Compare<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x4063CA: IntegerFixture_shift_right1_Test::TestBody() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45E632: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45104C: testing::Test::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x4510E3: testing::TestInfo::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x4511E4: testing::TestCase::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45145C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45173D: testing::UnitTest::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x404D4F: main (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3947== 
==3947== 
==3947== Process terminating with default action of signal 11 (SIGSEGV)
==3947==  Access not within mapped region at address 0x0
==3947==    at 0x42C2B7: testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x42A031: testing::AssertionResult testing::internal::EqHelper<false>::Compare<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x4063CA: IntegerFixture_shift_right1_Test::TestBody() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45E632: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45104C: testing::Test::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x4510E3: testing::TestInfo::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x4511E4: testing::TestCase::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45145C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x45173D: testing::UnitTest::Run() (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==    by 0x404D4F: main (in /v/filer4b/v38q001/dam2989/generic/cs378-integer/TestInteger)
==3947==  If you believe this happened as a result of a stack
==3947==  overflow in your program's main thread (unlikely but
==3947==  possible), you can try to increase the size of the
==3947==  main thread stack using the --main-stacksize= flag.
==3947==  The main thread stack size used in this run was 16777216.
==3947== 
==3947== HEAP SUMMARY:
==3947==     in use at exit: 25,123 bytes in 366 blocks
==3947==   total heap usage: 985 allocs, 619 frees, 83,537 bytes allocated
==3947== 
==3947== LEAK SUMMARY:
==3947==    definitely lost: 0 bytes in 0 blocks
==3947==    indirectly lost: 0 bytes in 0 blocks
==3947==      possibly lost: 6,755 bytes in 179 blocks
==3947==    still reachable: 18,368 bytes in 187 blocks
==3947==         suppressed: 0 bytes in 0 blocks
==3947== Rerun with --leak-check=full to see details of leaked memory
==3947== 
==3947== For counts of detected and suppressed errors, rerun with: -v
==3947== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
