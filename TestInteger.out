==31584== Memcheck, a memory error detector
==31584== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==31584== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==31584== Command: ./TestInteger
==31584== 
Running main() from gtest_main.cc
[==========] Running 36 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 36 tests from IntegerFixture
[ RUN      ] IntegerFixture.shift_left1
==31584== Invalid read of size 4
==31584==    at 0x41CEFF: testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x41B563: testing::AssertionResult testing::internal::EqHelper<false>::Compare<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x404F92: IntegerFixture_shift_left1_Test::TestBody() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x446212: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x438C2C: testing::Test::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x438CC3: testing::TestInfo::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x438DC4: testing::TestCase::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x43903C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x43931D: testing::UnitTest::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x404CDF: main (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==31584== 
==31584== 
==31584== Process terminating with default action of signal 11 (SIGSEGV)
==31584==  Access not within mapped region at address 0x0
==31584==    at 0x41CEFF: testing::AssertionResult testing::internal::CmpHelperEQ<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x41B563: testing::AssertionResult testing::internal::EqHelper<false>::Compare<int, int>(char const*, char const*, int const&, int const&) (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x404F92: IntegerFixture_shift_left1_Test::TestBody() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x446212: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x438C2C: testing::Test::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x438CC3: testing::TestInfo::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x438DC4: testing::TestCase::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x43903C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x43931D: testing::UnitTest::Run() (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==    by 0x404CDF: main (in /v/filer4b/v38q001/jeremiah/Documents/cs378-integer/TestInteger)
==31584==  If you believe this happened as a result of a stack
==31584==  overflow in your program's main thread (unlikely but
==31584==  possible), you can try to increase the size of the
==31584==  main thread stack using the --main-stacksize= flag.
==31584==  The main thread stack size used in this run was 16777216.
==31584== 
==31584== HEAP SUMMARY:
==31584==     in use at exit: 11,447 bytes in 166 blocks
==31584==   total heap usage: 506 allocs, 340 frees, 55,309 bytes allocated
==31584== 
==31584== LEAK SUMMARY:
==31584==    definitely lost: 0 bytes in 0 blocks
==31584==    indirectly lost: 0 bytes in 0 blocks
==31584==      possibly lost: 3,047 bytes in 79 blocks
==31584==    still reachable: 8,400 bytes in 87 blocks
==31584==         suppressed: 0 bytes in 0 blocks
==31584== Rerun with --leak-check=full to see details of leaked memory
==31584== 
==31584== For counts of detected and suppressed errors, rerun with: -v
==31584== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
