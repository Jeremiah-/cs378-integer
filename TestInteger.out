==25379== Memcheck, a memory error detector
==25379== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==25379== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==25379== Command: ./TestInteger
==25379== 
Running main() from gtest_main.cc
[==========] Running 103 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 103 tests from IntegerFixture
[ RUN      ] IntegerFixture.shift_left1
[       OK ] IntegerFixture.shift_left1 (28 ms)
[ RUN      ] IntegerFixture.shift_left2
[       OK ] IntegerFixture.shift_left2 (4 ms)
[ RUN      ] IntegerFixture.shift_left3
[       OK ] IntegerFixture.shift_left3 (4 ms)
[ RUN      ] IntegerFixture.shift_right1
[       OK ] IntegerFixture.shift_right1 (5 ms)
[ RUN      ] IntegerFixture.shift_right2
[       OK ] IntegerFixture.shift_right2 (4 ms)
[ RUN      ] IntegerFixture.shift_right3
[       OK ] IntegerFixture.shift_right3 (4 ms)
[ RUN      ] IntegerFixture.plus_digits1
[       OK ] IntegerFixture.plus_digits1 (24 ms)
[ RUN      ] IntegerFixture.plus_digits2
[       OK ] IntegerFixture.plus_digits2 (7 ms)
[ RUN      ] IntegerFixture.plus_digits3
[       OK ] IntegerFixture.plus_digits3 (6 ms)
[ RUN      ] IntegerFixture.plus_digits4
[       OK ] IntegerFixture.plus_digits4 (8 ms)
[ RUN      ] IntegerFixture.plus_digits5
[       OK ] IntegerFixture.plus_digits5 (5 ms)
[ RUN      ] IntegerFixture.plus_digits6
[       OK ] IntegerFixture.plus_digits6 (5 ms)
[ RUN      ] IntegerFixture.plus_digits7
[       OK ] IntegerFixture.plus_digits7 (5 ms)
[ RUN      ] IntegerFixture.minus_digits1
[       OK ] IntegerFixture.minus_digits1 (10 ms)
[ RUN      ] IntegerFixture.minus_digits2
[       OK ] IntegerFixture.minus_digits2 (6 ms)
[ RUN      ] IntegerFixture.minus_digits3
[       OK ] IntegerFixture.minus_digits3 (5 ms)
[ RUN      ] IntegerFixture.minus_digits4
[       OK ] IntegerFixture.minus_digits4 (5 ms)
[ RUN      ] IntegerFixture.multiplies_digits1
[       OK ] IntegerFixture.multiplies_digits1 (53 ms)
[ RUN      ] IntegerFixture.multiplies_digits2
[       OK ] IntegerFixture.multiplies_digits2 (6 ms)
[ RUN      ] IntegerFixture.multiplies_digits3
[       OK ] IntegerFixture.multiplies_digits3 (6 ms)
[ RUN      ] IntegerFixture.multiplies_digits4
[       OK ] IntegerFixture.multiplies_digits4 (6 ms)
[ RUN      ] IntegerFixture.multiplies_digits5
[       OK ] IntegerFixture.multiplies_digits5 (6 ms)
[ RUN      ] IntegerFixture.divides_digits1
TestInteger.c++:285: Failure
Value of: result
  Actual: { 0 }
Expected: correctVector
Which is: { 1 }
[  FAILED  ] IntegerFixture.divides_digits1 (36 ms)
[ RUN      ] IntegerFixture.divides_digits2
TestInteger.c++:295: Failure
Value of: result
  Actual: { 0, 0 }
Expected: correctVector
Which is: { 1, 0 }
[  FAILED  ] IntegerFixture.divides_digits2 (7 ms)
[ RUN      ] IntegerFixture.divides_digits3
[       OK ] IntegerFixture.divides_digits3 (5 ms)
[ RUN      ] IntegerFixture.divides_digits5
TestInteger.c++:316: Failure
Value of: result
  Actual: { 0, 0, 0, 0, 0, 0 }
Expected: correctVector
Which is: { 1, 0, 0, 0, 4, 6 }
[  FAILED  ] IntegerFixture.divides_digits5 (7 ms)
[ RUN      ] IntegerFixture.equalEqual1
[       OK ] IntegerFixture.equalEqual1 (9 ms)
[ RUN      ] IntegerFixture.equalEqual2
[       OK ] IntegerFixture.equalEqual2 (3 ms)
[ RUN      ] IntegerFixture.equalEqual3
[       OK ] IntegerFixture.equalEqual3 (3 ms)
[ RUN      ] IntegerFixture.equalEqual4
[       OK ] IntegerFixture.equalEqual4 (2 ms)
[ RUN      ] IntegerFixture.equalEqual5
[       OK ] IntegerFixture.equalEqual5 (3 ms)
[ RUN      ] IntegerFixture.lessThan1
[       OK ] IntegerFixture.lessThan1 (6 ms)
[ RUN      ] IntegerFixture.lessThan2
[       OK ] IntegerFixture.lessThan2 (3 ms)
[ RUN      ] IntegerFixture.lessThan3
[       OK ] IntegerFixture.lessThan3 (3 ms)
[ RUN      ] IntegerFixture.lessThan4
[       OK ] IntegerFixture.lessThan4 (3 ms)
[ RUN      ] IntegerFixture.lessThan5
[       OK ] IntegerFixture.lessThan5 (3 ms)
[ RUN      ] IntegerFixture.lessThan6
[       OK ] IntegerFixture.lessThan6 (2 ms)
[ RUN      ] IntegerFixture.lessThan7
[       OK ] IntegerFixture.lessThan7 (3 ms)
[ RUN      ] IntegerFixture.lessThan8
[       OK ] IntegerFixture.lessThan8 (4 ms)
[ RUN      ] IntegerFixture.lessThan9
[       OK ] IntegerFixture.lessThan9 (3 ms)
[ RUN      ] IntegerFixture.lessThan10
[       OK ] IntegerFixture.lessThan10 (2 ms)
[ RUN      ] IntegerFixture.outStream1
TestInteger.c++:442: Failure
Value of: o.str()
  Actual: "0"
Expected: "123"
[  FAILED  ] IntegerFixture.outStream1 (11 ms)
[ RUN      ] IntegerFixture.outStream2
TestInteger.c++:450: Failure
Value of: o.str()
  Actual: "0"
Expected: "-123"
[  FAILED  ] IntegerFixture.outStream2 (5 ms)
[ RUN      ] IntegerFixture.outStream3
TestInteger.c++:458: Failure
Value of: o.str()
  Actual: "0"
Expected: "-123654789"
[  FAILED  ] IntegerFixture.outStream3 (5 ms)
[ RUN      ] IntegerFixture.sConstructor1
TestInteger.c++:468: Failure
Value of: x == y
  Actual: false
Expected: true
[  FAILED  ] IntegerFixture.sConstructor1 (7 ms)
[ RUN      ] IntegerFixture.sConstructor2
TestInteger.c++:474: Failure
Value of: y == x
  Actual: false
Expected: true
[  FAILED  ] IntegerFixture.sConstructor2 (4 ms)
[ RUN      ] IntegerFixture.sConstructor3
[       OK ] IntegerFixture.sConstructor3 (3 ms)
[ RUN      ] IntegerFixture.sConstructor4
[       OK ] IntegerFixture.sConstructor4 (3 ms)
[ RUN      ] IntegerFixture.sConstructor5
[       OK ] IntegerFixture.sConstructor5 (3 ms)
[ RUN      ] IntegerFixture.sConstructor6
[       OK ] IntegerFixture.sConstructor6 (3 ms)
[ RUN      ] IntegerFixture.minus1
TestInteger.c++:508: Failure
Value of: x - y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.minus1 (10 ms)
[ RUN      ] IntegerFixture.minus2
TestInteger.c++:514: Failure
Value of: x - y
  Actual: 0
Expected: -246
[  FAILED  ] IntegerFixture.minus2 (5 ms)
[ RUN      ] IntegerFixture.minus3
TestInteger.c++:520: Failure
Value of: x - y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.minus3 (5 ms)
[ RUN      ] IntegerFixture.minus4
TestInteger.c++:526: Failure
Value of: x - y
  Actual: 0
Expected: 246
[  FAILED  ] IntegerFixture.minus4 (4 ms)
[ RUN      ] IntegerFixture.plusEqual1
TestInteger.c++:537: Failure
Value of: x += y
  Actual: 0
Expected: 246
[  FAILED  ] IntegerFixture.plusEqual1 (4 ms)
[ RUN      ] IntegerFixture.plusEqual2
TestInteger.c++:543: Failure
Value of: x += y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.plusEqual2 (3 ms)
[ RUN      ] IntegerFixture.plusEqual3
TestInteger.c++:549: Failure
Value of: x += y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.plusEqual3 (3 ms)
[ RUN      ] IntegerFixture.plusEqual4
TestInteger.c++:555: Failure
Value of: x += y
  Actual: 0
Expected: -246
[  FAILED  ] IntegerFixture.plusEqual4 (4 ms)
[ RUN      ] IntegerFixture.minusEqual1
TestInteger.c++:566: Failure
Value of: x -= y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.minusEqual1 (4 ms)
[ RUN      ] IntegerFixture.minusEqual2
TestInteger.c++:572: Failure
Value of: x -= y
  Actual: 0
Expected: 246
[  FAILED  ] IntegerFixture.minusEqual2 (4 ms)
[ RUN      ] IntegerFixture.minusEqual3
TestInteger.c++:578: Failure
Value of: x -= y
  Actual: 0
Expected: -246
[  FAILED  ] IntegerFixture.minusEqual3 (4 ms)
[ RUN      ] IntegerFixture.minusEqual4
TestInteger.c++:584: Failure
Value of: x -= y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.minusEqual4 (4 ms)
[ RUN      ] IntegerFixture.timesEqual1
TestInteger.c++:595: Failure
Value of: x *= y
  Actual: 0
Expected: 15129
[  FAILED  ] IntegerFixture.timesEqual1 (4 ms)
[ RUN      ] IntegerFixture.timesEqual2
TestInteger.c++:601: Failure
Value of: x *= y
  Actual: 0
Expected: -15129
[  FAILED  ] IntegerFixture.timesEqual2 (4 ms)
[ RUN      ] IntegerFixture.timesEqual3
TestInteger.c++:607: Failure
Value of: x *= y
  Actual: 0
Expected: -15129
[  FAILED  ] IntegerFixture.timesEqual3 (4 ms)
[ RUN      ] IntegerFixture.timesEqual4
TestInteger.c++:613: Failure
Value of: x *= y
  Actual: 0
Expected: 15129
[  FAILED  ] IntegerFixture.timesEqual4 (4 ms)
[ RUN      ] IntegerFixture.divideEqual1
TestInteger.c++:624: Failure
Value of: x /= y
  Actual: 0
Expected: 1
[  FAILED  ] IntegerFixture.divideEqual1 (3 ms)
[ RUN      ] IntegerFixture.divideEqual2
TestInteger.c++:630: Failure
Value of: x /= y
  Actual: 0
Expected: -1
[  FAILED  ] IntegerFixture.divideEqual2 (3 ms)
[ RUN      ] IntegerFixture.divideEqual3
TestInteger.c++:636: Failure
Value of: x /= y
  Actual: 0
Expected: -1
[  FAILED  ] IntegerFixture.divideEqual3 (4 ms)
[ RUN      ] IntegerFixture.divideEqual4
TestInteger.c++:642: Failure
Value of: x /= y
  Actual: 0
Expected: 1
[  FAILED  ] IntegerFixture.divideEqual4 (4 ms)
[ RUN      ] IntegerFixture.modulusEqual1
TestInteger.c++:653: Failure
Value of: x %= y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.modulusEqual1 (4 ms)
[ RUN      ] IntegerFixture.modulusEqual2
TestInteger.c++:659: Failure
Value of: x %= y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.modulusEqual2 (3 ms)
[ RUN      ] IntegerFixture.modulusEqual3
TestInteger.c++:665: Failure
Value of: x %= y
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.modulusEqual3 (4 ms)
[ RUN      ] IntegerFixture.modulusEqual4
TestInteger.c++:671: Failure
Value of: x %= y
  Actual: 0
Expected: 87
[  FAILED  ] IntegerFixture.modulusEqual4 (4 ms)
[ RUN      ] IntegerFixture.modulusEqual5
[       OK ] IntegerFixture.modulusEqual5 (3 ms)
[ RUN      ] IntegerFixture.bitShiftLeftEqual1
TestInteger.c++:688: Failure
Value of: x
  Actual: 0
Expected: 246
[  FAILED  ] IntegerFixture.bitShiftLeftEqual1 (3 ms)
[ RUN      ] IntegerFixture.bitShiftLeftEqual2
TestInteger.c++:694: Failure
Value of: x
  Actual: 0
Expected: 492
[  FAILED  ] IntegerFixture.bitShiftLeftEqual2 (4 ms)
[ RUN      ] IntegerFixture.bitShiftLeftEqual3
TestInteger.c++:700: Failure
Value of: x
  Actual: 0
Expected: 984
[  FAILED  ] IntegerFixture.bitShiftLeftEqual3 (3 ms)
[ RUN      ] IntegerFixture.bitShiftLeftEqual4
TestInteger.c++:706: Failure
Value of: x
  Actual: 0
Expected: 1968
[  FAILED  ] IntegerFixture.bitShiftLeftEqual4 (4 ms)
[ RUN      ] IntegerFixture.bitShiftLeftEqual5
TestInteger.c++:712: Failure
Value of: x
  Actual: 0
Expected: 3936
[  FAILED  ] IntegerFixture.bitShiftLeftEqual5 (4 ms)
[ RUN      ] IntegerFixture.bitShiftRightEqual1
TestInteger.c++:722: Failure
Value of: x
  Actual: 0
Expected: 61
[  FAILED  ] IntegerFixture.bitShiftRightEqual1 (3 ms)
[ RUN      ] IntegerFixture.bitShiftRightEqual2
TestInteger.c++:728: Failure
Value of: x
  Actual: 0
Expected: 30
[  FAILED  ] IntegerFixture.bitShiftRightEqual2 (3 ms)
[ RUN      ] IntegerFixture.bitShiftRightEqual3
TestInteger.c++:734: Failure
Value of: x
  Actual: 0
Expected: 15
[  FAILED  ] IntegerFixture.bitShiftRightEqual3 (3 ms)
[ RUN      ] IntegerFixture.bitShiftRightEqual4
TestInteger.c++:740: Failure
Value of: x
  Actual: 0
Expected: 7
[  FAILED  ] IntegerFixture.bitShiftRightEqual4 (3 ms)
[ RUN      ] IntegerFixture.bitShiftRightEqual5
TestInteger.c++:746: Failure
Value of: x
  Actual: 0
Expected: 3
[  FAILED  ] IntegerFixture.bitShiftRightEqual5 (3 ms)
[ RUN      ] IntegerFixture.abs1
[       OK ] IntegerFixture.abs1 (2 ms)
[ RUN      ] IntegerFixture.abs2
TestInteger.c++:760: Failure
Value of: x.abs()
  Actual: 0
Expected: 123
[  FAILED  ] IntegerFixture.abs2 (3 ms)
[ RUN      ] IntegerFixture.abs3
TestInteger.c++:765: Failure
Value of: x.abs()
  Actual: 0
Expected: 123
[  FAILED  ] IntegerFixture.abs3 (4 ms)
[ RUN      ] IntegerFixture.abs4
[       OK ] IntegerFixture.abs4 (2 ms)
[ RUN      ] IntegerFixture.abs5
TestInteger.c++:775: Failure
Value of: x.abs()
  Actual: 0
Expected: 123
[  FAILED  ] IntegerFixture.abs5 (3 ms)
[ RUN      ] IntegerFixture.pow1
[       OK ] IntegerFixture.pow1 (2 ms)
[ RUN      ] IntegerFixture.pow2
[       OK ] IntegerFixture.pow2 (2 ms)
[ RUN      ] IntegerFixture.pow3
TestInteger.c++:794: Failure
Value of: x.pow(2)
  Actual: 0
Expected: 15129
[  FAILED  ] IntegerFixture.pow3 (3 ms)
[ RUN      ] IntegerFixture.pow4
TestInteger.c++:799: Failure
Value of: x.pow(2)
  Actual: 0
Expected: 15129
[  FAILED  ] IntegerFixture.pow4 (3 ms)
[ RUN      ] IntegerFixture.pow5
TestInteger.c++:804: Failure
Value of: x.pow(3)
  Actual: 0
Expected: 1860867
[  FAILED  ] IntegerFixture.pow5 (4 ms)
[ RUN      ] IntegerFixture.pow6
TestInteger.c++:809: Failure
Value of: x.pow(3)
  Actual: 0
Expected: -1860867
[  FAILED  ] IntegerFixture.pow6 (3 ms)
[ RUN      ] IntegerFixture.pow7
TestInteger.c++:814: Failure
Value of: x.pow(0)
  Actual: 0
Expected: 1
[  FAILED  ] IntegerFixture.pow7 (3 ms)
[ RUN      ] IntegerFixture.pow8
TestInteger.c++:819: Failure
Value of: x.pow(0)
  Actual: 0
Expected: -1
[  FAILED  ] IntegerFixture.pow8 (4 ms)
[ RUN      ] IntegerFixture.pow9
TestInteger.c++:824: Failure
Value of: x.pow(-1)
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.pow9 (3 ms)
[ RUN      ] IntegerFixture.pow10
TestInteger.c++:829: Failure
Value of: x.pow(-1)
  Actual: 0
Expected: 0
[  FAILED  ] IntegerFixture.pow10 (3 ms)
[ RUN      ] IntegerFixture.negate1
TestInteger.c++:841: Failure
Value of: x
  Actual: 0
Expected: correctVector
Which is: 0
[  FAILED  ] IntegerFixture.negate1 (10 ms)
[ RUN      ] IntegerFixture.negate2
TestInteger.c++:849: Failure
Value of: x
  Actual: 0
Expected: correctVector
Which is: 0
[  FAILED  ] IntegerFixture.negate2 (4 ms)
[ RUN      ] IntegerFixture.negate3
[       OK ] IntegerFixture.negate3 (4 ms)
[----------] 103 tests from IntegerFixture (581 ms total)

[----------] Global test environment tear-down
[==========] 103 tests from 1 test case ran. (609 ms total)
[  PASSED  ] 48 tests.
[  FAILED  ] 55 tests, listed below:
[  FAILED  ] IntegerFixture.divides_digits1
[  FAILED  ] IntegerFixture.divides_digits2
[  FAILED  ] IntegerFixture.divides_digits5
[  FAILED  ] IntegerFixture.outStream1
[  FAILED  ] IntegerFixture.outStream2
[  FAILED  ] IntegerFixture.outStream3
[  FAILED  ] IntegerFixture.sConstructor1
[  FAILED  ] IntegerFixture.sConstructor2
[  FAILED  ] IntegerFixture.minus1
[  FAILED  ] IntegerFixture.minus2
[  FAILED  ] IntegerFixture.minus3
[  FAILED  ] IntegerFixture.minus4
[  FAILED  ] IntegerFixture.plusEqual1
[  FAILED  ] IntegerFixture.plusEqual2
[  FAILED  ] IntegerFixture.plusEqual3
[  FAILED  ] IntegerFixture.plusEqual4
[  FAILED  ] IntegerFixture.minusEqual1
[  FAILED  ] IntegerFixture.minusEqual2
[  FAILED  ] IntegerFixture.minusEqual3
[  FAILED  ] IntegerFixture.minusEqual4
[  FAILED  ] IntegerFixture.timesEqual1
[  FAILED  ] IntegerFixture.timesEqual2
[  FAILED  ] IntegerFixture.timesEqual3
[  FAILED  ] IntegerFixture.timesEqual4
[  FAILED  ] IntegerFixture.divideEqual1
[  FAILED  ] IntegerFixture.divideEqual2
[  FAILED  ] IntegerFixture.divideEqual3
[  FAILED  ] IntegerFixture.divideEqual4
[  FAILED  ] IntegerFixture.modulusEqual1
[  FAILED  ] IntegerFixture.modulusEqual2
[  FAILED  ] IntegerFixture.modulusEqual3
[  FAILED  ] IntegerFixture.modulusEqual4
[  FAILED  ] IntegerFixture.bitShiftLeftEqual1
[  FAILED  ] IntegerFixture.bitShiftLeftEqual2
[  FAILED  ] IntegerFixture.bitShiftLeftEqual3
[  FAILED  ] IntegerFixture.bitShiftLeftEqual4
[  FAILED  ] IntegerFixture.bitShiftLeftEqual5
[  FAILED  ] IntegerFixture.bitShiftRightEqual1
[  FAILED  ] IntegerFixture.bitShiftRightEqual2
[  FAILED  ] IntegerFixture.bitShiftRightEqual3
[  FAILED  ] IntegerFixture.bitShiftRightEqual4
[  FAILED  ] IntegerFixture.bitShiftRightEqual5
[  FAILED  ] IntegerFixture.abs2
[  FAILED  ] IntegerFixture.abs3
[  FAILED  ] IntegerFixture.abs5
[  FAILED  ] IntegerFixture.pow3
[  FAILED  ] IntegerFixture.pow4
[  FAILED  ] IntegerFixture.pow5
[  FAILED  ] IntegerFixture.pow6
[  FAILED  ] IntegerFixture.pow7
[  FAILED  ] IntegerFixture.pow8
[  FAILED  ] IntegerFixture.pow9
[  FAILED  ] IntegerFixture.pow10
[  FAILED  ] IntegerFixture.negate1
[  FAILED  ] IntegerFixture.negate2

55 FAILED TESTS
==25379== 
==25379== HEAP SUMMARY:
==25379==     in use at exit: 0 bytes in 0 blocks
==25379==   total heap usage: 4,767 allocs, 4,767 frees, 695,141 bytes allocated
==25379== 
==25379== All heap blocks were freed -- no leaks are possible
==25379== 
==25379== For counts of detected and suppressed errors, rerun with: -v
==25379== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
